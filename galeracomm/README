
Galera Communications project
=============================

This project is created to gather all cluster wide communication
work under single source tree. There are several reasons to do 
this instead of including source e.g. in gcs project: 

- Separation forces for clean and complete interface design
- Communication is currently in early development phase, including 
  source in other project could complicate or even break things
- Current version of code makes heavy use of glib which is not 
  used and (not intended to use?) anywhere else in Galera, lots of 
  cleanup and utility implementation will take place later on
- Communications project size can grow significantly over time with 
  further requirements
- Current codebase is not organized and modular project structure 
  enforces code refactoring
- I don't have my 'own' source tree yet ;)


Project Organization
====================

Directory organization reflects the high level design goal, and may 
change in the future according to design changes.

channel
-------
FIFO reliable N-to-N communication library. 

common
------
This directory will contain utility code which may later be exported 
under galerautils project if found generally useful.

des
---
Discrete event simulation code, mainly used for unit testing. It is 
not even designed yet, but will be later refactored out from unit
tests.

pc
--
Primary Component protocol library. 

resolv
------
Placeholder for name resolver library. Will be utilized to generate 
mapping between human readable names and protocol addresses.

sdream
------
Placeholder for reliable stream/datagram communication library for 
connection oriented communication. 

transport
---------
This directory will contain code for low level transport backends.

vs
--
View Synchrony protocol library.

Dependencies
============

External dependecies
--------------------
Ultimate goal is that this project will depend only on standard 
C libraries and platform specific low level communication interfaces.
And naturally on galerautils. 

Exception is transport, which may depend on third party transport 
protocols as Spread. 

Internal dependencies
---------------------

           ---- sdream -----> resolv <---
           |      |             |       |
           |      ----------------------|
           |              |             |
           |              v             |
common <---|--------- transport <---- channel <---- vs <---- pc
           |              |             |           |        |
           |              |             |           |        |
           |              |             |           |        |
           ---- des <-----------------------------------------

Public API
==========

Public API will be exported as it evolves and is found to be stable. 

Documentation
=============

API reference documentation will be included in header files. 

High leven design documentation will be stored under project root doc 
directory. Sub-project specific documentation will be found from 
sub-project doc directory.

- Teemu
